// <auto-generated />
using System;
using Dominio.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(WebApiContext))]
    partial class WebApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Categoriapersona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("categoriapersona", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("IdDepartamentoFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDepartamentoFk" }, "IdDepartamentoFk");

                    b.ToTable("ciudad", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Contactopersona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdPersonaFk")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoContactoFk")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPersonaFk" }, "IdPersonaFk");

                    b.HasIndex(new[] { "IdTipoContactoFk" }, "IdTipoContactoFk");

                    b.ToTable("contactopersona", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("FechaContrato")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaFin")
                        .HasColumnType("date");

                    b.Property<int?>("IdClienteFk")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpleadoFk")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstadoFk")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdClienteFk" }, "IdClienteFk");

                    b.HasIndex(new[] { "IdEmpleadoFk" }, "IdEmpleadoFk");

                    b.HasIndex(new[] { "IdEstadoFk" }, "IdEstadoFk");

                    b.ToTable("contrato", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("IdPaisFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPaisFk" }, "IdPaisFk");

                    b.ToTable("departamento", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Direccionpersona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdPersonaFk")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDireccionFk")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPersonaFk" }, "IdPersonaFk")
                        .HasDatabaseName("IdPersonaFk1");

                    b.HasIndex(new[] { "IdTipoDireccionFk" }, "IdTipoDireccionFk");

                    b.ToTable("direccionpersona", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("estado", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Pai", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("pais", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("FechaRegistro")
                        .HasColumnType("date");

                    b.Property<int?>("IdCategoriaFk")
                        .HasColumnType("int");

                    b.Property<int?>("IdCiudadFk")
                        .HasColumnType("int");

                    b.Property<int?>("IdPersonaFk")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoPersonaFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCategoriaFk" }, "IdCategoriaFk");

                    b.HasIndex(new[] { "IdCiudadFk" }, "IdCiudadFk");

                    b.HasIndex(new[] { "IdTipoPersonaFk" }, "IdTipoPersonaFk");

                    b.ToTable("persona", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Programacion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("IdContratoFk")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpleadoFk")
                        .HasColumnType("int");

                    b.Property<int?>("IdTurnoFk")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdContratoFk" }, "IdContratoFk");

                    b.HasIndex(new[] { "IdEmpleadoFk" }, "IdEmpleadoFk")
                        .HasDatabaseName("IdEmpleadoFk1");

                    b.HasIndex(new[] { "IdTurnoFk" }, "IdTurnoFk");

                    b.ToTable("programacion", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Tipocontacto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipocontacto", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Tipodireccion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipodireccion", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Tipopersona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipopersona", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Turno", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HoraFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("HoraInicio")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("turno", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Ciudad", b =>
                {
                    b.HasOne("Dominio.Entities.Departamento", "IdDepartamentoFkNavigation")
                        .WithMany("Ciudads")
                        .HasForeignKey("IdDepartamentoFk")
                        .HasConstraintName("ciudad_ibfk_1");

                    b.Navigation("IdDepartamentoFkNavigation");
                });

            modelBuilder.Entity("Dominio.Entities.Contactopersona", b =>
                {
                    b.HasOne("Dominio.Entities.Persona", "IdPersonaFkNavigation")
                        .WithMany("Contactopersonas")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("contactopersona_ibfk_1");

                    b.HasOne("Dominio.Entities.Tipocontacto", "IdTipoContactoFkNavigation")
                        .WithMany("Contactopersonas")
                        .HasForeignKey("IdTipoContactoFk")
                        .HasConstraintName("contactopersona_ibfk_2");

                    b.Navigation("IdPersonaFkNavigation");

                    b.Navigation("IdTipoContactoFkNavigation");
                });

            modelBuilder.Entity("Dominio.Entities.Contrato", b =>
                {
                    b.HasOne("Dominio.Entities.Persona", "IdClienteFkNavigation")
                        .WithMany("ContratoIdClienteFkNavigations")
                        .HasForeignKey("IdClienteFk")
                        .HasConstraintName("contrato_ibfk_1");

                    b.HasOne("Dominio.Entities.Persona", "IdEmpleadoFkNavigation")
                        .WithMany("ContratoIdEmpleadoFkNavigations")
                        .HasForeignKey("IdEmpleadoFk")
                        .HasConstraintName("contrato_ibfk_2");

                    b.HasOne("Dominio.Entities.Estado", "IdEstadoFkNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("contrato_ibfk_3");

                    b.Navigation("IdClienteFkNavigation");

                    b.Navigation("IdEmpleadoFkNavigation");

                    b.Navigation("IdEstadoFkNavigation");
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.HasOne("Dominio.Entities.Pai", "IdPaisFkNavigation")
                        .WithMany("Departamentos")
                        .HasForeignKey("IdPaisFk")
                        .HasConstraintName("departamento_ibfk_1");

                    b.Navigation("IdPaisFkNavigation");
                });

            modelBuilder.Entity("Dominio.Entities.Direccionpersona", b =>
                {
                    b.HasOne("Dominio.Entities.Persona", "IdPersonaFkNavigation")
                        .WithMany("Direccionpersonas")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("direccionpersona_ibfk_1");

                    b.HasOne("Dominio.Entities.Tipodireccion", "IdTipoDireccionFkNavigation")
                        .WithMany("Direccionpersonas")
                        .HasForeignKey("IdTipoDireccionFk")
                        .HasConstraintName("direccionpersona_ibfk_2");

                    b.Navigation("IdPersonaFkNavigation");

                    b.Navigation("IdTipoDireccionFkNavigation");
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.HasOne("Dominio.Entities.Categoriapersona", "IdCategoriaFkNavigation")
                        .WithMany("Personas")
                        .HasForeignKey("IdCategoriaFk")
                        .HasConstraintName("persona_ibfk_2");

                    b.HasOne("Dominio.Entities.Ciudad", "IdCiudadFkNavigation")
                        .WithMany("Personas")
                        .HasForeignKey("IdCiudadFk")
                        .HasConstraintName("persona_ibfk_3");

                    b.HasOne("Dominio.Entities.Tipopersona", "IdTipoPersonaFkNavigation")
                        .WithMany("Personas")
                        .HasForeignKey("IdTipoPersonaFk")
                        .HasConstraintName("persona_ibfk_1");

                    b.Navigation("IdCategoriaFkNavigation");

                    b.Navigation("IdCiudadFkNavigation");

                    b.Navigation("IdTipoPersonaFkNavigation");
                });

            modelBuilder.Entity("Dominio.Entities.Programacion", b =>
                {
                    b.HasOne("Dominio.Entities.Contrato", "IdContratoFkNavigation")
                        .WithMany("Programacions")
                        .HasForeignKey("IdContratoFk")
                        .HasConstraintName("programacion_ibfk_1");

                    b.HasOne("Dominio.Entities.Persona", "IdEmpleadoFkNavigation")
                        .WithMany("Programacions")
                        .HasForeignKey("IdEmpleadoFk")
                        .HasConstraintName("programacion_ibfk_4");

                    b.HasOne("Dominio.Entities.Turno", "IdTurnoFkNavigation")
                        .WithMany("Programacions")
                        .HasForeignKey("IdTurnoFk")
                        .HasConstraintName("programacion_ibfk_2");

                    b.Navigation("IdContratoFkNavigation");

                    b.Navigation("IdEmpleadoFkNavigation");

                    b.Navigation("IdTurnoFkNavigation");
                });

            modelBuilder.Entity("Dominio.Entities.Categoriapersona", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.Entities.Ciudad", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.Entities.Contrato", b =>
                {
                    b.Navigation("Programacions");
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.Navigation("Ciudads");
                });

            modelBuilder.Entity("Dominio.Entities.Estado", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("Dominio.Entities.Pai", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.Navigation("Contactopersonas");

                    b.Navigation("ContratoIdClienteFkNavigations");

                    b.Navigation("ContratoIdEmpleadoFkNavigations");

                    b.Navigation("Direccionpersonas");

                    b.Navigation("Programacions");
                });

            modelBuilder.Entity("Dominio.Entities.Tipocontacto", b =>
                {
                    b.Navigation("Contactopersonas");
                });

            modelBuilder.Entity("Dominio.Entities.Tipodireccion", b =>
                {
                    b.Navigation("Direccionpersonas");
                });

            modelBuilder.Entity("Dominio.Entities.Tipopersona", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.Entities.Turno", b =>
                {
                    b.Navigation("Programacions");
                });
#pragma warning restore 612, 618
        }
    }
}
